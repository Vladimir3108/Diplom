//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Diplom.Entities
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;

    public partial class Recruit
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Recruit()
        {
            this.MedCard = new HashSet<MedCard>();
        }
    
        public int RecruitId { get; set; }
        public string Surname { get; set; }
        public string Name { get; set; }
        public string Patronymic { get; set; }
        public string Address { get; set; }
        public Nullable<int> MilitaryTerritoryId { get; set; }
        public Nullable<System.DateTime> DraftDate { get; set; }
        public byte[] Image { get; set; }
        public string FIO
        {
            get
            {
                return Surname + " " + Name[0] + "." + Patronymic[0] + ".";
            }
        }
        public string AdminVisibility
        {
            get
            {
                if (App.CurrentUser.RoleId != 1)
                    return "Collapsed";
                else return "Visible";
            }
        }
        public string DoctorsVisibility
        {
            get
            {
                var medCard = App.Context.MedCard.Where(p => p.RecruitId == RecruitId).ToList();
                if (App.CurrentUser.RoleId == 1)
                    return "Collapsed";
                else
                {
                    string visible = "Visible";
                    if (medCard.Count > 0)
                        visible = "Visible";
                    else if (medCard.Count == 0 && App.CurrentUser.RoleId != 3)
                        visible = "Collapsed";
                    return visible;
                }
            }
        }
        public string VisibilityDoctors
        {
            get
            {
                string visible = "Visible";
                var roles = App.Context.Users.Select(p => p.Role).ToList();
                for (int i = 0; i < roles.Count; i++)
                {
                    while (App.CurrentUser.Role == roles[i])
                        visible = "Collapsed";

                }
                return visible;
            }
        }
        public byte[] RecruitImage
        {
            get
            {
                if (Image == null)
                    return File.ReadAllBytes("../../bin/Resources/user.jpg");
                else return Image;
            }
        }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MedCard> MedCard { get; set; }
        public virtual MilitaryTerritory MilitaryTerritory { get; set; }
    }
}
